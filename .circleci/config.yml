# Java Maven CircleCI 2.0 configuration file
#
#
version: 2
jobs:
  repo-check:
    docker:
      - image: circleci/golang:1.13.0

    working_directory: /go/src/github.com/instaclustr/cassandra-operator
    steps:
      - checkout
      - restore_cache: # restores saved cache if no changes are detected since last run
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Validate repository
          command: GO111MODULE=on .circleci/validate_repo.sh
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
  build:
    docker:
      # specify the version you desire here
      - image: gcr.io/cassandra-operator/jdk8-gcloud-sdk:2.0.1
        auth:
          username: _json_key
          password: $GOOGLE_AUTH

    working_directory: ~/cassandra-operator

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      - restore_cache: # restores saved cache if no changes are detected since last run
          keys:
            - m2
            - go-mod-v4-{{ checksum "go.sum" }}

      - setup_remote_docker:
          docker_layer_caching: false

      - run: make

      - save_cache:
          key: m2
          paths:
            - ~/.m2
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"

  test-gcp:
    docker:
      # specify the version you desire here
      - image: gcr.io/cassandra-operator/jdk8-gcloud-sdk:2.0.1
        auth:
          username: _json_key
          password: $GOOGLE_AUTH

    working_directory: ~/cassandra-operator

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m
      # for helm to be able to use registry feature for push charts
      HELM_EXPERIMENTAL_OCI: 1

    steps:
      - checkout

      - run:
          name: Dump Google Cloud Credentials to file
          command: echo ${GOOGLE_AUTH} > ${HOME}/gcp-key.json

      - run:
          name: Setup Google Cloud
          command: gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json --project=cassandra-operator && gcloud --quiet config set project cassandra-operator && gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}

      - run:
          name: Setup K8s cluster and Credentials
          command: gcloud --quiet container clusters create ${K8S_CLUSTER_NAME} --cluster-version=${K8S_CLUSTER_VERSION} && gcloud --quiet container clusters get-credentials ${K8S_CLUSTER_NAME}

      - run:
          name: Helm repository login
          command: helm registry login -u _json_key --password-stdin gcr.io < ${HOME}/gcp-key.json

      - setup_remote_docker:
          docker_layer_caching: false

      - run:
          name: Create Docker images
          command: ./buildenv/build-all dev

      - run:
          name: Release Docker images
          command: ./buildenv/release-all dev

      - run:
          name: Deploy Operator and Cassandra
          command: ./test/operator-deployment.sh && ./test/cassandra-cluster-deployment-test.sh

      - run:
          name: Cleanup GCP resources
          command: gcloud --quiet container clusters delete ${K8S_CLUSTER_NAME} --async
          when: always

  release:
    docker:
      # specify the version you desire here
      - image: gcr.io/cassandra-operator/jdk8-gcloud-sdk:2.0.1
        auth:
          username: _json_key
          password: $GOOGLE_AUTH

    working_directory: ~/cassandra-operator

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m
      # for helm to be able to use registry feature for push charts
      HELM_EXPERIMENTAL_OCI: 1

    steps:
      - checkout

      - run:
          name: Set TAG environment to version
          command: |
            TAG=$(git tag --points-at master | tail -n 1)
            if [[ ! -z "${TAG}" ]]; then
                echo "export TAG=${TAG}" >> $BASH_ENV
                source $BASH_ENV
            else
                echo "The last commit on master doesn't seem to be tagged! Not releasing"
                circleci-agent step halt
            fi

      - restore_cache: # restores saved cache if no changes are detected since last run
          keys:
            - m2
            - go-mod-v4-{{ checksum "go.sum" }}


      # Download and cache dependencies
      - run:
          name: Dump Google Cloud Credentials to file
          command: echo ${GOOGLE_AUTH} > ${HOME}/gcp-key.json
      - run:
          name: Setup Google Cloud
          command: gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json && gcloud --quiet config set project ${GOOGLE_PROJECT_ID} && gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}

      - run:
          name: Helm repository login
          command: helm registry login -u _json_key --password-stdin gcr.io < ${HOME}/gcp-key.json

      - setup_remote_docker:
          docker_layer_caching: false

      - run:
          name: Create Docker images
          command: ./buildenv/build-all prod

      - run:
          name: Release docker images
          command: ./buildenv/release-all prod

workflows:
  version: 2
  build_and_test:
    jobs:
      - repo-check
      - build:
          requires:
            - repo-check
          filters:
            branches:
              ignore:
                - master
      - test-gcp:
          requires:
            - build
            - release
          filters:
            branches:
              only: master
      - release:
          requires:
            - repo-check
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+$/
            branches:
              only: master
