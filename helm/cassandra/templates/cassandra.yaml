apiVersion: cassandraoperator.instaclustr.com/v1alpha1
kind: CassandraDataCenter
metadata:
  name: {{ template "cassandra.fullname" . }}
  labels:
    app: {{ template "cassandra.name" . }}
    chart: {{ template "cassandra.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
{{- if .Values.labels }}
{{ toYaml .Values.labels | indent 4 }}
{{- end }}
spec:
  nodes: {{ .Values.replicaCount }}
  {{- if .Values.racks }}
  racks:
{{ toYaml .Values.racks | indent 4 }}
  {{- end }}
  cassandraImage: "{{ .Values.image.cassandraRepository }}:{{ .Values.image.cassandraTag }}"
  sidecarImage: "{{ .Values.image.sidecarRepository }}:{{ .Values.image.sidecarTag }}"
  imagePullPolicy: {{ .Values.imagePullPolicy }}
  {{- if  .Values.imagePullSecrets }}
  imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 4}}
  {{- end }}

  {{- if .Values.cassandraEnv }}
  cassandraEnv:
{{ toYaml .Values.cassandraEnv | indent 4 }}
  {{- end }}

  {{- if .Values.sidecarEnv }}
sidecarEnv:
{{ toYaml .Values.sidecarEnv | indent 4 }}
  {{- end }}

  {{- if .Values.backupSecretVolumeSource }}
  backupSecretVolumeSource:
{{ toYaml .Values.backupSecretVolumeSource | indent 4 }}
  {{- end }}

  resources:
{{ toYaml .Values.resources | indent 4 }}
  dataVolumeClaimSpec:
{{ toYaml .Values.dataVolumeClaim | indent 4 }}
{{- if .Values.restoreFromBackup }}
  restoreFromBackup: {{ .Values.restoreFromBackup }}
{{- end }}
{{- if .Values.userConfigMapVolumeSource }}
  userConfigMapVolumeSource:
  {{ toYaml .Values.userConfigMapVolumeSource | indent 4 }}
{{- end }}
  prometheusSupport: {{ .Values.prometheusEnabled }}
{{- if .Values.optimizeKernelParams }}
  optimizeKernelParams: {{ .Values.optimizeKernelParams }}
{{- end }}
{{- if .Values.serviceAccountName }}
  serviceAccountName: {{ .Values.serviceAccountName }}
{{- else}}
{{- if (.Values.optimizeKernelParams) and eq .Values.optimizeKernelParams "true"}}
  serviceAccountName: "cassandra-performance"
{{- else}}
  serviceAccountName: "cassandra"
{{- end}}
{{- end}}
